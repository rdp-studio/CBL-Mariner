diff -Naur cifs-utils-6.8.orig/mount.cifs.c cifs-utils-6.8.mod/mount.cifs.c
--- cifs-utils-6.8.orig/mount.cifs.c	2020-09-30 17:26:48.250924409 -0700
+++ cifs-utils-6.8.mod/mount.cifs.c	2020-09-30 17:27:19.002733900 -0700
@@ -1646,6 +1646,73 @@
 	return 0;
 }
 
+#ifdef ENABLE_SYSTEMD
+static int get_passwd_by_systemd(const char *prompt, char *input, int capacity)
+{
+	int fd[2];
+	pid_t pid;
+	int offs = 0;
+	int rc = 1;
+
+	if (pipe(fd) == -1) {
+		fprintf(stderr, "Failed to create pipe: %s\n", strerror(errno));
+		return 1;
+	}
+
+	pid = fork();
+	if (pid == -1) {
+		fprintf(stderr, "Unable to fork: %s\n", strerror(errno));
+		close(fd[0]);
+		close(fd[1]);
+		return 1;
+	}
+	if (pid == 0) {
+		close(fd[0]);
+		dup2(fd[1], STDOUT_FILENO);
+		if (execlp("systemd-ask-password", "systemd-ask-password", prompt, NULL) == -1) {
+			fprintf(stderr, "Failed to execute systemd-ask-password: %s\n",
+			strerror(errno));
+		}
+		exit(1);
+	}
+
+	close(fd[1]);
+	for (;;) {
+		if (offs+1 >= capacity) {
+			fprintf(stderr, "Password too long.\n");
+			kill(pid, SIGTERM);
+			rc = 1;
+			break;
+		}
+		rc = read(fd[0], input + offs, capacity - offs);
+		if (rc == -1) {
+			fprintf(stderr, "Failed to read from pipe: %s\n", strerror(errno));
+			rc = 1;
+			break;
+		}
+		if (!rc)
+			break;
+		offs += rc;
+		input[offs] = '\0';
+	}
+	if (wait(&rc) == -1) {
+		fprintf(stderr, "Failed to wait child: %s\n", strerror(errno));
+		rc = 1;
+		goto out;
+	}
+	if (!WIFEXITED(rc) || WEXITSTATUS(rc)) {
+		rc = 1;
+		goto out;
+	}
+
+		rc = 0;
+
+out:
+		close(fd[0]);
+		return rc;
+}
+#endif
+
 /*
  * If systemd is running and systemd-ask-password --
  * is available, then use that else fallback on getpass(..)
@@ -1659,35 +1726,22 @@
 	int is_systemd_running;
 	struct stat a, b;
 
+	memset(input, 0, capacity);
+
 	/* We simply test whether the systemd cgroup hierarchy is
 	 * mounted */
 	is_systemd_running = (lstat("/sys/fs/cgroup", &a) == 0)
 		&& (lstat("/sys/fs/cgroup/systemd", &b) == 0)
 		&& (a.st_dev != b.st_dev);
 
-	if (is_systemd_running) {
-		char *cmd, *ret;
-		FILE *ask_pass_fp = NULL;
-
-		cmd = ret = NULL;
-		if (asprintf(&cmd, "systemd-ask-password \"%s\"", prompt) >= 0) {
-			ask_pass_fp = popen (cmd, "re");
-			free (cmd);
-		}
-
-		if (ask_pass_fp) {
-			ret = fgets(input, capacity, ask_pass_fp);
-			pclose(ask_pass_fp);
-		}
-
-		if (ret) {
-			int len = strlen(input);
-			if (input[len - 1] == '\n')
-				input[len - 1] = '\0';
-			return input;
-		}
+	if (is_systemd_running && !get_passwd_by_systemd(prompt, input, capacity)) {
+		int len = strlen(input);
+		if (input[len - 1] == '\n')
+			input[len - 1] = '\0';
+		return input;
 	}
 #endif
+	memset(input, 0, capacity);
 
 	/*
 	 * Falling back to getpass(..)
