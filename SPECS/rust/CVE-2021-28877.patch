From a297d4e6d60244482b6889111080a461bd474426 Mon Sep 17 00:00:00 2001
From: Thomas Crain <thcrain@microsoft.com>
Date: Mon, 26 Apr 2021 13:38:46 -0500
Subject: [PATCH 3/6] Patch CVE-2021-28877

Backported to 1.47.0:
https://github.com/rust-lang/rust/pull/80670/files
---
 library/core/src/iter/adapters/zip.rs |  1 +
 library/core/tests/iter.rs            | 18 ++++++++++++++++++
 2 files changed, 19 insertions(+)

diff --git a/library/core/src/iter/adapters/zip.rs b/library/core/src/iter/adapters/zip.rs
index 581ac6e0d82..cde4d8f3c06 100644
--- a/library/core/src/iter/adapters/zip.rs
+++ b/library/core/src/iter/adapters/zip.rs
@@ -289,6 +289,7 @@ where
 
     #[inline]
     unsafe fn get_unchecked(&mut self, idx: usize) -> <Self as Iterator>::Item {
+        let idx = self.index + idx;
         // SAFETY: the caller must uphold the contract for
         // `Iterator::get_unchecked`.
         unsafe { (self.a.__iterator_get_unchecked(idx), self.b.__iterator_get_unchecked(idx)) }
diff --git a/library/core/tests/iter.rs b/library/core/tests/iter.rs
index 00e3972c42f..803dc5d1698 100644
--- a/library/core/tests/iter.rs
+++ b/library/core/tests/iter.rs
@@ -3222,3 +3222,21 @@ fn test_flatten_non_fused_inner() {
     assert_eq!(iter.next(), Some(1));
     assert_eq!(iter.next(), None);
 }
+
+#[test]
+fn test_zip_trusted_random_access_composition() {
+    let a = [0, 1, 2, 3, 4];
+    let b = a;
+    let c = a;
+
+    let a = a.iter().copied();
+    let b = b.iter().copied();
+    let mut c = c.iter().copied();
+    c.next();
+
+    let mut z1 = a.zip(b);
+    assert_eq!(z1.next().unwrap(), (0, 0));
+
+    let mut z2 = z1.zip(c);
+    assert_eq!(z2.next().unwrap(), ((1, 1), 1));
+}
\ No newline at end of file
-- 
2.25.1
