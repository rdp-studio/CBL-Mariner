From 173e9c1d6dc4195e9223d6c1f7fe95017c12fd9f Mon Sep 17 00:00:00 2001
From: Thomas Crain <thcrain@microsoft.com>
Date: Mon, 26 Apr 2021 13:44:39 -0500
Subject: [PATCH 5/6] Fix CVE-2021-28879

Backport to 1.47.0:
https://github.com/rust-lang/rust/pull/82289
---
 library/core/src/iter/adapters/zip.rs |  3 ++-
 library/core/tests/iter.rs            | 22 +++++++++++++++++++++-
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/library/core/src/iter/adapters/zip.rs b/library/core/src/iter/adapters/zip.rs
index 8a9f4b8af1e..e480bf2bc28 100644
--- a/library/core/src/iter/adapters/zip.rs
+++ b/library/core/src/iter/adapters/zip.rs
@@ -203,6 +203,7 @@ where
         } else if A::may_have_side_effect() && self.index < self.a.size() {
             let i = self.index;
             self.index += 1;
+            self.len += 1;
             // match the base implementation's potential side effects
             // SAFETY: we just checked that `i` < `self.a.len()`
             unsafe {
@@ -263,7 +264,7 @@ where
             if sz_a != sz_b {
                 let sz_a = self.a.size();
                 if a_side_effect && sz_a > self.len {
-                    for _ in 0..sz_a - cmp::max(self.len, self.index) {
+                    for _ in 0..sz_a - self.len {
                         self.a.next_back();
                     }
                 }
diff --git a/library/core/tests/iter.rs b/library/core/tests/iter.rs
index 803dc5d1698..913764894ec 100644
--- a/library/core/tests/iter.rs
+++ b/library/core/tests/iter.rs
@@ -3239,4 +3239,24 @@ fn test_zip_trusted_random_access_composition() {
 
     let mut z2 = z1.zip(c);
     assert_eq!(z2.next().unwrap(), ((1, 1), 1));
-}
\ No newline at end of file
+}
+
+#[test]
+fn test_issue_82282() {
+    fn overflowed_zip(arr: &[i32]) -> impl Iterator<Item = (i32, &())> {
+        static UNIT_EMPTY_ARR: [(); 0] = [];
+
+        let mapped = arr.into_iter().map(|i| *i);
+        let mut zipped = mapped.zip(UNIT_EMPTY_ARR.iter());
+        zipped.next();
+        zipped
+    }
+
+    let arr = [1, 2, 3];
+    let zip = overflowed_zip(&arr).zip(overflowed_zip(&arr));
+
+    assert_eq!(zip.size_hint(), (0, Some(0)));
+    for _ in zip {
+        panic!();
+    }
+}
-- 
2.25.1

