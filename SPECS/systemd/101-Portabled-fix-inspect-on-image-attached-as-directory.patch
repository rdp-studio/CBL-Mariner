From 1d2d0c4bece89adbbc32abb2f38c0efd9080e1d7 Mon Sep 17 00:00:00 2001
From: Luca Boccassi <luca.boccassi@microsoft.com>
Date: Wed, 22 Jan 2020 15:56:24 +0000
Subject: [PATCH] Portabled: fix inspect on image attached as directory

When a portable image is attached as a directory, inspect will fail
as the directory will be symlinked under [/run|/etc]/portables and
chase_symlinks will try to open the resolved link to the full
absolute path of the image under [/run|/etc]/portables/<name>.

(eg: /run/portables/test/home/user/test/etc/os-release)

Resolve the symlink beforehand to fix the issue.

Fixes #14634

(cherry picked from commit a409d1f5c6ba21ce9f7b113da69b98072f77ca16)
---
 src/portable/portable.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/portable/portable.c b/src/portable/portable.c
index 3491723aa1..ea6dc51a30 100644
--- a/src/portable/portable.c
+++ b/src/portable/portable.c
@@ -373,8 +373,14 @@ static int portable_extract_by_path(
         if (r == -EISDIR) {
                 /* We can't turn this into a loop-back block device, and this returns EISDIR? Then this is a directory
                  * tree and not a raw device. It's easy then. */
+                /* Resolve the link to the directory tree. If it's a symlink, chase_symlink of path + "/etc/os-release"
+                 * as called by open_os_release will fail (see: #14634). */
+                _cleanup_free_ char *path_resolve = NULL;
 
-                r = extract_now(path, matches, -1, &os_release, &unit_files);
+                r = chase_symlinks(path, "/", CHASE_PREFIX_ROOT, &path_resolve);
+                if (r < 0)
+                        return log_debug_errno(r, "Failed to resolve image directory path %s: %m", path);
+                r = extract_now(path_resolve, matches, -1, &os_release, &unit_files);
                 if (r < 0)
                         return r;
 
-- 
2.20.1

