# Configuration for the one-user-system user module.
#
# Besides these settings, the user module also places the following
# keys into the globalconfig area, based on user input in the view step.
#
# - hostname
# - username
# - password (obscured)
# - autologinUser (if enabled, set to username)
#
# These globalconfig keys are set when the jobs for this module
# are created.
---

# These are optional password-requirements that a distro can enforce
# on the user. The values given in this sample file set only very weak
# validation settings.
#
# - nonempty rejects empty passwords
# - there are no length validations
# - libpwquality (if it is enabled at all) has no length of class
#   restrictions, although it will still reject palindromes and
#   dictionary words with these settings.
#
# Checks may be listed multiple times; each is checked separately,
# and no effort is done to ensure that the checks are consistent
# (e.g. specifying a maximum length less than the minimum length
# will annoy users).
#
# The libpwquality check relies on the (optional) libpwquality library.
# Its value is a list of configuration statements that could also
# be found in pwquality.conf, and these are handed off to the
# libpwquality parser for evaluation. The check is ignored if
# libpwquality is not available at build time (generates a warning in
# the log). The Calamares password check rejects passwords with a
# score of < 40 with the given libpwquality settings.
#
# (additional checks may be implemented in CheckPWQuality.cpp and
# wired into UsersPage.cpp)
#
#  - To disable specific password validations:
#    comment out the relevant 'passwordRequirements' keys below.
#  - To disable all password validations:
#    set both 'allowWeakPasswords' and 'allowWeakPasswordsDefault' to true.
#    (That will show the box *Allow weak passwords* in the user-
#    interface, and check it by default).
passwordRequirements:
    nonempty: true
    minLength: 8  # Password at least this many characters
    maxLength: -1  # Password at most this many characters
    libpwquality:
        - minlen=8 # Password at least this many characters
        - minclass=2 # Password must have at least this many unique classes of characters (lowercase, uppercase, symbols, ...)

# You can control the visibility of the 'strong passwords' checkbox here.
# Possible values are:
#  - true to show or
#  - false to hide  (default)
# the checkbox. This checkbox allows the user to choose to disable
# password-strength-checks. By default the box is **hidden**, so
# that you have to pick a password that satisfies the checks.
allowWeakPasswords: false
